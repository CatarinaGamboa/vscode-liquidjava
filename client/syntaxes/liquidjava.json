{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "LiquidJava",
  "scopeName": "source.liquidjava",
  "injectionSelector": "L:source.java",
  "patterns": [
    {
      "begin": "@ExternalRefinementsFor\\s*\\(",
      "end": "\\)",
      "name": "meta.annotation.externalrefinement.liquidjava",
      "patterns": [
        {
          "begin": "\"",
          "end": "\"",
          "contentName": "entity.name.type.externalref.liquidjava"
        }
      ]
    },
    {
      "begin": "@(Refinement|RefinementMultiple|RefinementAlias|RefinementAliasMultiple|RefinementPredicate|RefinementPredicateMultiple|StateSet|StateSets|Ghost|ExternalRefinementsFor)\\s*\\(",
      "end": "\\)",
      "name": "meta.annotation.refinement.liquidjava",
      "patterns": [
        {
          "begin": "\"",
          "end": "\"",
          "contentName": "source.liquidjava",
          "patterns": [
            { "include": "#keywords" },
            { "include": "#operators" },
            { "include": "#types" },
            { "include": "#literals" },
            { "include": "#identifiers" }
          ]
        }
      ]
    },
    {
      "begin": "@(StateRefinement|StateRefinementMultiple)\\s*\\(",
      "end": "\\)",
      "name": "meta.annotation.refinement.liquidjava",
      "patterns": [
        {
          "match": "\\b(from|to)\\b",
          "name": "variable.parameter.annotation.liquidjava"
        },
        {
          "begin": "\"",
          "end": "\"",
          "contentName": "source.liquidjava",
          "patterns": [
            { "include": "#keywords" },
            { "include": "#operators" },
            { "include": "#types" },
            { "include": "#literals" },
            { "include": "#identifiers" }
          ]
        }
      ]
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        { "match": "\\bghost\\b|\\balias\\b|\\btype\\b", "name": "keyword.other.liquidjava" }
      ]
    },
    "operators": {
      "patterns": [
        { "match": "&&|\\|\\||-->|==|!=|>=|>|<=|<|\\+|\\*|/|%|!|-|\\?|:", "name": "keyword.operator.liquidjava" }
      ]
    },
    "types": {
      "patterns": [
        { "match": "\\b(int|double|float|boolean)\\b", "name": "storage.type.primitive.liquidjava" },
        { "match": "\\b[A-Z][a-zA-Z0-9]*\\b", "name": "entity.name.type.liquidjava" }
      ]
    },
    "literals": {
      "patterns": [
        { "match": "\\btrue\\b|\\bfalse\\b", "name": "constant.language.boolean.liquidjava" },
        { "match": "\\d+", "name": "constant.numeric.liquidjava" }
      ]
    },
    "identifiers": {
      "patterns": [
        { "match": "#*[a-zA-Z_][a-zA-Z0-9_#]*", "name": "variable.other.liquidjava" }
      ]
    }
  }
}
